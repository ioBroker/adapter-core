{
  "version": 3,
  "sources": ["../esm/index.js"],
  "sourcesContent": ["import { join } from 'node:path';\nimport { controllerToolsInternal, resolveNamedModule } from './controllerTools.js';\nimport * as utils from './utils.js';\nimport '@iobroker/types';\n// Export utility methods to be used in adapters\nexport { commonTools } from './controllerTools.js';\nexport * from './utils.js';\nexport * as I18n from './i18n.js';\n/**\n * Returns the absolute path of the data directory for the current host. On linux, this is usually `/opt/iobroker/iobroker-data`.\n */\nexport function getAbsoluteDefaultDataDir() {\n    return join(utils.controllerDir, controllerToolsInternal.getDefaultDataDir());\n}\n/**\n * Returns the absolute path of the data directory for the current adapter instance.\n * On linux, this is usually `/opt/iobroker/iobroker-data/<adapterName>.<instanceNr>`\n *\n * @param adapterObject The adapter instance\n */\nexport function getAbsoluteInstanceDataDir(adapterObject) {\n    return join(getAbsoluteDefaultDataDir(), adapterObject.namespace);\n}\n// TODO: Expose some system utilities here, e.g. for installing npm modules (GH#1)\nexport const EXIT_CODES = Object.freeze({\n    // Create a shallow copy so compact adapters cannot overwrite the dict in js-controller\n    ...resolveNamedModule('exitCodes', 'EXIT_CODES'),\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAqB;AACrB,6BAA4D;AAC5D,YAAuB;AACvB,mBAAO;AAEP,IAAAA,0BAA4B;AAC5B,wBAAc,uBANd;AAOA,WAAsB;AAIf,SAAS,4BAA4B;AACxC,aAAO,uBAAK,MAAM,eAAe,+CAAwB,kBAAkB,CAAC;AAChF;AAOO,SAAS,2BAA2B,eAAe;AACtD,aAAO,uBAAK,0BAA0B,GAAG,cAAc,SAAS;AACpE;AAEO,MAAM,aAAa,OAAO,OAAO;AAAA,EAEpC,OAAG,2CAAmB,aAAa,YAAY;AACnD,CAAC;",
  "names": ["import_controllerTools"]
}
