{
  "version": 3,
  "sources": ["../esm/i18nConvert.js"],
  "sourcesContent": ["import { existsSync, readdirSync, renameSync, unlinkSync } from \"node:fs\";\nimport { join } from \"node:path\";\n// convert i18n/lang/translations.json to i18n/lang.json\nfunction convert(rootDir) {\n    if (existsSync(join(rootDir, \"i18n\"))) {\n        rootDir = join(rootDir, \"i18n\");\n    }\n    else if (existsSync(join(rootDir, \"lib\", \"i18n\"))) {\n        rootDir = join(rootDir, \"lib\", \"i18n\");\n    }\n    else if (existsSync(join(rootDir, \"admin\", \"i18n\"))) {\n        rootDir = join(rootDir, \"admin\", \"i18n\");\n    }\n    else if (rootDir.endsWith(\"i18n\")) {\n        // already the correct directory\n    }\n    const langs = readdirSync(rootDir);\n    for (const lang of langs) {\n        if ((lang.match(/^[a-z]{2}$/) || lang === \"zh-cn\") &&\n            existsSync(join(rootDir, lang, \"translations.json\"))) {\n            renameSync(join(rootDir, lang, \"translations.json\"), join(rootDir, `${lang}.json`));\n            unlinkSync(join(rootDir, lang));\n        }\n    }\n}\nif (process.argv.length < 3) {\n    console.warn(\"Usage: node i18nConvert <path>\");\n    convert(\".\");\n}\nelse {\n    convert(process.argv[2]);\n}\n"],
  "mappings": ";AAAA,qBAAgE;AAChE,uBAAqB;AAErB,SAAS,QAAQ,SAAS;AACtB,UAAI,+BAAW,uBAAK,SAAS,MAAM,CAAC,GAAG;AACnC,kBAAU,uBAAK,SAAS,MAAM;AAAA,EAClC,eACS,+BAAW,uBAAK,SAAS,OAAO,MAAM,CAAC,GAAG;AAC/C,kBAAU,uBAAK,SAAS,OAAO,MAAM;AAAA,EACzC,eACS,+BAAW,uBAAK,SAAS,SAAS,MAAM,CAAC,GAAG;AACjD,kBAAU,uBAAK,SAAS,SAAS,MAAM;AAAA,EAC3C,WACS,QAAQ,SAAS,MAAM,GAAG;AAAA,EAEnC;AACA,QAAM,YAAQ,4BAAY,OAAO;AACjC,aAAW,QAAQ,OAAO;AACtB,SAAK,KAAK,MAAM,YAAY,KAAK,SAAS,gBACtC,+BAAW,uBAAK,SAAS,MAAM,mBAAmB,CAAC,GAAG;AACtD,yCAAW,uBAAK,SAAS,MAAM,mBAAmB,OAAG,uBAAK,SAAS,GAAG,WAAW,CAAC;AAClF,yCAAW,uBAAK,SAAS,IAAI,CAAC;AAAA,IAClC;AAAA,EACJ;AACJ;AACA,IAAI,QAAQ,KAAK,SAAS,GAAG;AACzB,UAAQ,KAAK,gCAAgC;AAC7C,UAAQ,GAAG;AACf,OACK;AACD,UAAQ,QAAQ,KAAK,EAAE;AAC3B;",
  "names": []
}
